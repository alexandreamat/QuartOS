"""first migration

Revision ID: 91c4cb625f8b
Revises: 
Create Date: 2024-01-10 10:14:08.699668

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '91c4cb625f8b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('movement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replacementpattern',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pattern', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('replacement', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactiondeserialiser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount_deserialiser', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp_deserialiser', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name_deserialiser', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('skip_rows', sa.Integer(), nullable=False),
    sa.Column('columns', sa.Integer(), nullable=False),
    sa.Column('delimiter', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('encoding', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('default_currency_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plaid_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('plaid_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('colour', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('logo', sa.LargeBinary(), nullable=True),
    sa.Column('transactiondeserialiser_id', sa.Integer(), nullable=True),
    sa.Column('replacementpattern_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['replacementpattern_id'], ['replacementpattern.id'], ),
    sa.ForeignKeyConstraint(['transactiondeserialiser_id'], ['transactiondeserialiser.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plaid_id')
    )
    op.create_table('noninstitutionalaccount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('PERSONAL_LEDGER', 'CASH', 'PROPERTY', name='noninstitutionalaccounttype'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userinstitutionlink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plaid_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('plaid_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cursor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plaid_id')
    )
    op.create_table('institutionalaccount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plaid_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('plaid_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sa.Enum('INVESTMENT', 'CREDIT', 'DEPOSITORY', 'LOAN', 'BROKERAGE', 'OTHER', name='institutionalaccounttype'), nullable=False),
    sa.Column('mask', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bic', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('iban', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('userinstitutionlink_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userinstitutionlink_id'], ['userinstitutionlink.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plaid_id')
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('initial_balance', sa.Numeric(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('institutionalaccount_id', sa.Integer(), nullable=True),
    sa.Column('noninstitutionalaccount_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institutionalaccount_id'], ['institutionalaccount.id'], ),
    sa.ForeignKeyConstraint(['noninstitutionalaccount_id'], ['noninstitutionalaccount.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plaid_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('plaid_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('timestamp', sa.Date(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('movement_id', sa.Integer(), nullable=False),
    sa.Column('account_balance', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['movement_id'], ['movement.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plaid_id')
    )
    op.create_table('file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('uploaded', sa.DateTime(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('file')
    op.drop_table('transaction')
    op.drop_table('account')
    op.drop_table('institutionalaccount')
    op.drop_table('userinstitutionlink')
    op.drop_table('noninstitutionalaccount')
    op.drop_table('institution')
    op.drop_table('user')
    op.drop_table('transactiondeserialiser')
    op.drop_table('replacementpattern')
    op.drop_table('movement')
    # ### end Alembic commands ###
